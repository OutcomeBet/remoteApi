function RemoteProxy(config){this.__url=config.url,this.__methodSeparator=config.methodSeparator||".",this.addMethods(config.methods||{}),this.__pendingRequests=[],this.__throttledRequest=_.throttle(this.__doBatchRequest,config.throttle||0,{leading:!1}),this.__promiseConverter=config.promiseConverter}function doRequestServer(requestsData){var requestBody=JSON.stringify({calls:requestsData});return new Promise(function(resolve,reject){$.ajax({url:this.__url,headers:{Accept:"application/json","Content-Type":"application/json"},data:requestBody,type:"POST",dataType:"json",xhrFields:{withCredentials:!0},success:function(data){resolve(data.results)},error:function(jqXHR,status,error){reject(status+": "+error)}})}.bind(this))}function RemoteApiError(message){var e;this.name="RemoteApiError",this.message=message,Error.captureStackTrace?Error.captureStackTrace(this,this.constructor):(e=new Error(message))&&e.stack&&(this.stack=e.stack)}RemoteProxy.prototype={__addPendingRequest:function(method,args){return new Promise(function(resolve,reject){this.__pendingRequests.push({method:method,args:1===args.length?args[0]:args,resolver:{promise:this,resolve:resolve,reject:reject}}),this.__throttledRequest()}.bind(this))},__doBatchRequest:function(){if(0!==this.__pendingRequests.length){var requests=this.__pendingRequests.splice(0,this.__pendingRequests.length);console.log("Running "+requests.length+" requests in a batch:",requests);var requestsData=_.map(requests,function(request){return{method:request.method,args:request.args}});doRequestServer.call(this,requestsData).then(function(responsesData){_.each(responsesData,function(responseData,key){var request=requests[key];if(responseData.success)request.resolver.resolve(responseData.response);else{var err;"exception"in responseData&&"message"in responseData.exception?(err=new RemoteApiError(responseData.exception.message),"details"in responseData.exception&&(err.details=responseData.exception.details)):err=new RemoteApiError("Unknown error. See the Network log for details."),request.resolver.reject(err)}})}).catch(function(err){console.error(err)})}},__convertObject:function(object,prefix){var proxy=this,converted={};return _.each(object,function(value,key,list){if(_.isArray(value))converted[key]=proxy.__convertObject(_.object(value,[]),prefix+key+proxy.__methodSeparator);else if(_.isObject(value))converted[key]=proxy.__convertObject(value,prefix+key+proxy.__methodSeparator);else{var method=prefix+key;converted[key]=function(){var promise=proxy.__addPendingRequest(method,arguments);return proxy.__throttledRequest(),proxy.__promiseConverter?proxy.__promiseConverter(promise,method):promise}}}),converted},call:function(method,args){return this.__addPendingRequest(method,args)},addMethods:function(methods,prefix){_.extend(this,this.__convertObject(methods||{},prefix||""))},createProxy:function(methods,prefix){return this.__convertObject(methods,prefix||"")}},Object.setPrototypeOf?Object.setPrototypeOf(RemoteApiError,Error):RemoteApiError.__proto__=Error,RemoteApiError.prototype=Object.create(Error.prototype),RemoteApiError.prototype.constructor=RemoteApiError;